{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","componentDidMount","timerId","setInterval","setState","time","toLocaleTimeString","console","log","prevProps","name","this","props","clearInterval","React","Component","App","isClockVisible","showClock","hideClock","changeName","Math","random","toFixed","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA4CeA,E,4MAxCbC,MAAQ,CACNC,KAAM,IAAIC,M,EAGZC,kBAAoB,WAClB,EAAKC,QAAUC,aAAY,WAAO,IACxBJ,EAAS,EAAKD,MAAdC,KAER,EAAKK,SAAS,CAAEC,KAAMN,EAAKO,uBAE3BC,QAAQC,IAAIT,EAAKO,sBACjB,EAAKF,SAAS,CAAEL,KAAM,IAAIC,SACzB,M,wDAGL,SAAmBS,GACbA,EAAUC,OAASC,KAAKC,MAAMF,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DC,KAAKC,MAAMF,S,kCAI9E,WACEG,cAAcF,KAAKT,W,oBAGrB,WACE,OACE,2CAEGS,KAAKb,MAAMO,U,GA/BAS,IAAMC,WCyCXC,G,kNAtCblB,MAAQ,CACNmB,gBAAgB,EAChBP,KAAM,K,EAGRQ,UAAY,WACV,EAAKd,SAAS,CAAEa,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKf,SAAS,CAAEa,gBAAgB,K,EAGlCG,WAAa,WACN,EAAKtB,MAAMmB,gBAIhB,EAAKb,SAAS,CAAEM,MAAuB,GAAhBW,KAAKC,UAAeC,QAAQ,M,4CAGrD,WACE,OACE,yBAAKC,UAAU,OACb,2CAGCb,KAAKb,MAAMmB,gBACV,kBAAC,EAAD,CAAOP,KAAMC,KAAKb,MAAMY,OAE1B,4BAAQe,KAAK,SAASC,QAASf,KAAKO,WAApC,cACA,4BAAQO,KAAK,SAASC,QAASf,KAAKQ,WAApC,cACA,4BAAQM,KAAK,SAASC,QAASf,KAAKS,YAApC,wB,GAjCUN,IAAMC,YCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.adaf64fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount = () => {\n    this.timerId = setInterval(() => {\n      const { date } = this.state;\n\n      this.setState({ time: date.toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {this.state.time}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: '1',\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  changeName = () => {\n    if (!this.state.isClockVisible) {\n      return;\n    }\n\n    this.setState({ name: (Math.random() * 10).toFixed(0) });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock\n        </h1>\n        {this.state.isClockVisible && (\n          <Clock name={this.state.name} />\n        )}\n        <button type=\"button\" onClick={this.showClock}>Show Clock</button>\n        <button type=\"button\" onClick={this.hideClock}>Hide Clock</button>\n        <button type=\"button\" onClick={this.changeName}>Set random name</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}